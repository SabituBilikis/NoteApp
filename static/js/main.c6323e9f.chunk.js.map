{"version":3,"sources":["styles/Navbar.module.css","components/StateProvider.jsx","pages/Register.jsx","pages/Login.jsx","pages/Home.jsx","components/Todo.jsx","components/Navbar.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","AppContext","createContext","initialState","isLoggedIn","userId","userEmail","posts","StateProvider","children","useState","appData","setAppData","Provider","value","state","setState","Register","useForm","register","handleSubmit","useContext","history","useHistory","className","onSubmit","email","password","confirmPassword","alert","userFound","localStorage","getItem","console","log","newUser","Date","now","setItem","JSON","stringify","prevValue","push","htmlFor","type","name","id","placeholder","required","href","Login","user","userdata","parse","prevstate","Home","to","Todo","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","useEffect","json","loadedTodos","e","preventDefault","newTodo","getTime","text","completed","concat","onChange","target","map","checked","updatedTodos","toggleComplete","onClick","submitEdits","filter","deleteTodo","Navbar","styles","navbar","navlink","prev","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6323e9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1xYEU\",\"navlink\":\"Navbar_navlink__3m0cA\"};","import { createContext, useEffect, useState } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n\tisLoggedIn: false,\r\n\tuserId: null,\r\n\tuserEmail: null,\r\n\tposts: [],\r\n};\r\n\r\nexport default function StateProvider({ children }) {\r\n\tconst [appData, setAppData] = useState(initialState);\r\n\r\n\t\r\n\treturn (\r\n\t\t<AppContext.Provider value={{ state: appData, setState: setAppData }}>\r\n\t\t\t{children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n}\r\n","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { AppContext } from '../components/StateProvider';\r\n// import styles\r\nimport '../styles/Register.css';\r\n\r\nconst Register = () => {\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst history = useHistory();\r\n\r\n\tfunction registerUser({ email, password, confirmPassword }) {\r\n\t\tif (!email) {\r\n\t\t\treturn alert(`please provide an email`);\r\n\t\t}\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\treturn alert(`passwords don't match`);\r\n\t\t}\r\n\t\tlet userFound = localStorage.getItem(email);\r\n\t\tconsole.log(userFound);\r\n\t\tif (userFound) {\r\n\t\t\treturn alert('This user has already been registered');\r\n\t\t}\r\n\t\t// create new user object and save it to local storage\r\n\t\tconst newUser = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tuserId: Date.now(),\r\n\t\t};\r\n\t\t// save the users data for accessing later\r\n\t\tlocalStorage.setItem(email, JSON.stringify(newUser));\r\n\r\n\t\talert('user registered');\r\n\t\tsetState(prevValue => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevValue,\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tuserId: newUser.userId,\r\n\t\t\t\tuserEmail: newUser.email,\r\n\t\t\t};\r\n\t\t});\r\n\t\thistory.push('/home');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='container__child signup__form'>\r\n\t\t\t\t<form onSubmit={handleSubmit(registerUser)}>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\tplaceholder='james.bond@spectre.com'\r\n\t\t\t\t\t\t\t{...register('email', { required: true })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\tplaceholder='********'\r\n\t\t\t\t\t\t\t{...register('password', { required: true })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t<label htmlFor='passwordRepeat'>Repeat Password</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname='passwordRepeat'\r\n\t\t\t\t\t\t\tid='passwordRepeat'\r\n\t\t\t\t\t\t\tplaceholder='********'\r\n\t\t\t\t\t\t\t{...register('confirmPassword', { required: true })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='m-t-lg'>\r\n\t\t\t\t\t\t<ul className='list-inline'>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button className='btn btn--form' type='submit'>\r\n\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className='signup__link' href='/login'>\r\n\t\t\t\t\t\t\t\t\tI already have an account\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppContext } from '../components/StateProvider';\r\n\r\nexport default function Login() {\r\n\tconst { setState } = useContext(AppContext);\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst history = useHistory();\r\n\r\n\tconst login = ({ email, password }) => {\r\n\t\t// get the users data\r\n\t\tconst user = localStorage.getItem(email);\r\n\r\n\t\tif (!user) {\r\n\t\t\treturn alert('An account for this email was not found');\r\n\t\t}\r\n\r\n\t\tconst userdata = JSON.parse(user);\r\n\t\tconsole.log(userdata);\r\n\r\n\t\tif (password !== userdata.password) {\r\n\t\t\treturn alert('email or password was incorrect');\r\n\t\t}\r\n\r\n\t\talert('login successfull');\r\n\t\tsetState(prevstate => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevstate,\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tuserId: userdata.userId,\r\n\t\t\t\tuserEmail: userdata.email,\r\n\t\t\t};\r\n\t\t});\r\n\t\thistory.push('/home');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit(login)}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t{...register('email')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t{...register('password')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type='submit' value='Login' />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n","import { Link } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport {  useHistory } from 'react-router-dom';\r\n\r\nimport { AppContext } from '../components/StateProvider';\r\n\r\nconst Home = () => {\r\n\t\r\n    const { state, setState } = useContext(AppContext);\r\n\tconst history = useHistory();\r\n\r\n\treturn (!state.isLoggedIn ? (\r\n        <div className='home'>\r\n\t\t\t<h2 className='home-title'>Welcome, You are almost there!</h2>\r\n\t\t\t<p className='home-body'>To start creating your Todo List</p>\r\n\t\t\t<Link to={'/register'}>Register  </Link>\r\n            or\r\n\t\t\t<Link to={'/login'}>Login</Link>\r\n           <span>to get started</span> \r\n\r\n\t\t</div>\r\n                \r\n        ) : (\r\n            <div className='home'>\r\n\t\t\t<h2 className='home-title'>Welcome, You are in!</h2>\r\n\t\t\t<p className='home-body'>Start creating your Todo</p>\r\n\t\t\t<Link to={'/todo'}> Get started </Link>\r\n\t\t</div>\r\n        ))\r\n        \r\n    };\r\n        \r\n\t\t\r\n        \r\n\r\nexport default Home;\r\n","import {  useEffect, useState } from 'react';\r\nimport { AppContext } from '../components/StateProvider';\r\n//styles\r\nimport \"../styles/Todo.css\";\r\nconst Todo = () => {\r\n    const { state, setState } = AppContext;\r\n  \r\n    const [todos, setTodos] = useState([]);\r\n    const [todo, setTodo] = useState(\"\");\r\n    const [todoEditing, setTodoEditing] = useState(null);\r\n    const [editingText, setEditingText] = useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      const json = localStorage.getItem(\"todos\");\r\n      const loadedTodos = JSON.parse(json);\r\n      if (loadedTodos) {\r\n        setTodos(loadedTodos);\r\n      }\r\n      }, []);\r\n    \r\n      useEffect(() => {\r\n      const json = JSON.stringify(todos);\r\n      localStorage.setItem(\"todos\", json);\r\n      }, [todos]);\r\n  \r\n  \r\n    function handleSubmit(e) {\r\n      e.preventDefault();\r\n  \r\n      const newTodo = {\r\n        id: new Date().getTime(),\r\n        text: todo,\r\n        completed: false,\r\n      };\r\n      setTodos([...todos].concat(newTodo));\r\n      setTodo(\"\");\r\n    }\r\n  \r\n    function deleteTodo(id) {\r\n      let updatedTodos = [...todos].filter((todo) => todo.id !== id);\r\n      setTodos(updatedTodos);\r\n    }\r\n  \r\n    function toggleComplete(id) {\r\n      let updatedTodos = [...todos].map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      });\r\n      setTodos(updatedTodos);\r\n    }\r\n  \r\n    function submitEdits(id) {\r\n      const updatedTodos = [...todos].map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.text = editingText;\r\n        }\r\n        return todo;\r\n      });\r\n      setTodos(updatedTodos);\r\n      setTodoEditing(null);\r\n    }\r\n  \r\n    return (\r\n      <div id=\"todo-list\">\r\n        <h1>Todo List</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setTodo(e.target.value)}\r\n            value={todo}\r\n          />\r\n          <button type=\"submit\">Add Todo</button>\r\n        </form>\r\n        {todos.map((todo) => (\r\n          <div key={todo.id} className=\"todo\">\r\n            <div className=\"todo-text\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"completed\"\r\n                checked={todo.completed}\r\n                onChange={() => toggleComplete(todo.id)}\r\n              />\r\n              {todo.id === todoEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={(e) => setEditingText(e.target.value)}\r\n                />\r\n              ) : (\r\n                <div>{todo.text}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"todo-actions\">\r\n              {todo.id === todoEditing ? (\r\n                <button onClick={() => submitEdits(todo.id)}>Submit Edits</button>\r\n              ) : (\r\n                <button onClick={() => setTodoEditing(todo.id)}>Edit</button>\r\n              )}\r\n  \r\n              <button onClick={() => deleteTodo(todo.id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Todo;","import { useContext } from 'react';\r\nimport { AppContext } from './StateProvider';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// import styles\r\nimport styles from '../styles/Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst history = useHistory();\r\n\r\n\tconst logout = () => {\r\n\t\tsetState(prev => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tuserEmail: null,\r\n\t\t\t\tuserId: null,\r\n\t\t\t};\r\n\t\t});\r\n\t\thistory.push('/home');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<nav className={styles.navbar}>\r\n\t\t\t\r\n\t\t\t<Link className={styles.navlink} to='/home'>\r\n\t\t\t\tHome\r\n\t\t\t</Link>\r\n\t\t\t{!state.isLoggedIn ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link className={styles.navlink} to='/register'>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link className={styles.navlink} to='/login'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link className={styles.navlink} to='/todo'>\r\n\t\t\t\t\t\tCreate Todo\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span onClick={logout} className={styles.navlink}>\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route,Link} from \"react-router-dom\";\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Home from './pages/Home'; \nimport Todo from './components/Todo';\nimport Navbar from './components/Navbar';\nimport StateProvider from './components/StateProvider';\n\n\n//import styles \nimport './index.css';\n\nconst App = () => {\n  return (\n    <StateProvider>\n    <Router>\n        <Navbar />\n\n        <Switch>\n            {/* render Register Component when we hit /register */}\n            <Route exact path='/register'>\n                <Register />\n            </Route>\n\n            {/* render Login Component when user hit /login */}\n            <Route exact path='/login'>\n                <Login />\n            </Route>\n            {/* render home Component when user hit /home */}\n            <Route exact path='/home'>\n                <Home />\n            </Route>\n            {/* render Todo Component when user hit create todo */}\n            <Route exact path='/todo'>\n                <Todo />\n            </Route>\n\t\t\t\n        </Switch>\n    </Router>\n</StateProvider>\n  )\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}